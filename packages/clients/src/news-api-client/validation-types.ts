// Generated by ts-to-zod
import { z } from 'zod';

export const newsEndpointSchema = z.union([z.literal('top-headlines'), z.literal('everything'), z.literal('sources')]);

export const newsRequestSchema = z.object({
  q: z.string().optional(),
  pageSize: z.number().optional(),
  page: z.number().optional(),
});

export const categorySchema = z.union([
  z.literal('business'),
  z.literal('entertainment'),
  z.literal('general'),
  z.literal('health'),
  z.literal('science'),
  z.literal('sports'),
  z.literal('technology'),
]);

export const countrySchema = z.union([
  z.literal('ae'),
  z.literal('ar'),
  z.literal('at'),
  z.literal('au'),
  z.literal('be'),
  z.literal('bg'),
  z.literal('br'),
  z.literal('ca'),
  z.literal('ch'),
  z.literal('cn'),
  z.literal('co'),
  z.literal('cu'),
  z.literal('cz'),
  z.literal('de'),
  z.literal('eg'),
  z.literal('fr'),
  z.literal('gb'),
  z.literal('gr'),
  z.literal('hk'),
  z.literal('hu'),
  z.literal('id'),
  z.literal('ie'),
  z.literal('il'),
  z.literal('in'),
  z.literal('it'),
  z.literal('jp'),
  z.literal('kr'),
  z.literal('lt'),
  z.literal('lv'),
  z.literal('ma'),
  z.literal('mx'),
  z.literal('my'),
  z.literal('ng'),
  z.literal('nl'),
  z.literal('no'),
  z.literal('nz'),
  z.literal('ph'),
  z.literal('pl'),
  z.literal('pt'),
  z.literal('ro'),
  z.literal('rs'),
  z.literal('ru'),
  z.literal('sa'),
  z.literal('se'),
  z.literal('sg'),
  z.literal('si'),
  z.literal('sk'),
  z.literal('th'),
  z.literal('tr'),
  z.literal('tw'),
  z.literal('ua'),
  z.literal('us'),
  z.literal('ve'),
  z.literal('za'),
]);

export const errorCodeSchema = z.union([
  z.literal('apiKeyDisabled'),
  z.literal('apiKeyExhausted'),
  z.literal('apiKeyInvalid'),
  z.literal('parameterInvalid'),
  z.literal('parameterMissing'),
  z.literal('rateLimited'),
  z.literal('sourcesTooMany'),
  z.literal('sourceDoesNotExist'),
  z.literal('unexpectedError'),
]);

export const searchInSchema = z.union([z.literal('title'), z.literal('content'), z.literal('description')]);

export const languageSchema = z.union([
  z.literal('ar'),
  z.literal('de'),
  z.literal('en'),
  z.literal('es'),
  z.literal('fr'),
  z.literal('he'),
  z.literal('it'),
  z.literal('nl'),
  z.literal('no'),
  z.literal('pt'),
  z.literal('ru'),
  z.literal('se'),
  z.literal('ud'),
  z.literal('zh'),
]);

export const sortBySchema = z.union([z.literal('relevancy'), z.literal('popularity'), z.literal('publishedAt')]);

export const sourceSchema = z
  .object({
    id: z.string(),
    name: z.string(),
  })
  .and(
    z.union([
      z.object({
        description: z.string(),
        url: z.string(),
        category: categorySchema,
        language: languageSchema,
        country: countrySchema,
      }),
      z.object({}),
    ])
  );

export const everythingRequestSchema = newsRequestSchema.and(
  z.object({
    searchIn: z.array(searchInSchema).optional(),
    sources: z.array(z.string()).optional(),
    domains: z.array(z.string()).optional(),
    excludeDomains: z.array(z.string()).optional(),
    from: z.date().optional(),
    to: z.date().optional(),
    language: languageSchema.optional(),
    sortBy: sortBySchema.optional(),
  })
);

export const headlinesRequestSchema = newsRequestSchema
  .and(
    z.object({
      category: categorySchema.optional(),
    })
  )
  .and(
    z.union([
      z.object({
        country: countrySchema,
      }),
      z.object({
        sources: z.array(z.string()),
      }),
      z.object({}),
    ])
  );

export const sourcesRequestSchema = z.object({
  category: categorySchema.optional(),
  language: languageSchema.optional(),
  country: countrySchema.optional(),
});

export const sourcesResponseSchema = z.object({
  status: z.literal('ok'),
  sources: z.array(sourceSchema),
});

export const errorResponseSchema = z.object({
  status: z.literal('error'),
  code: errorCodeSchema,
  message: z.string(),
});

export const newsArticleSchema = z.object({
  source: sourceSchema,
  author: z.string(),
  title: z.string(),
  description: z.string(),
  url: z.string(),
  urlToImage: z.string(),
  publishedAt: z.date().optional(),
  content: z.string(),
});

export const newArticleRequestSchema = z.union([
  z
    .object({
      route: z.literal('top-headlines'),
    })
    .and(headlinesRequestSchema),
  z
    .object({
      route: z.literal('everything'),
    })
    .and(everythingRequestSchema),
  z
    .object({
      route: z.literal('sources'),
    })
    .and(sourcesRequestSchema),
]);

export const articleResponseSchema = z.object({
  status: z.literal('ok'),
  totalResults: z.number(),
  articles: z.array(newsArticleSchema),
});
